package com.eaglesandcobras.common.types.scroller{	import com.eaglesandcobras.common.thumbs.ThumbnailsView;	import com.eaglesandcobras.common.graphics.ScrollStyle;	import com.eaglesandcobras.common.thumbs.Paging;		public class ScrollerView extends ThumbnailsView{		private var _scrollStyle:ScrollStyle;				public function ScrollerView(){			super();						_scrollStyle = new ScrollStyle();		}				/*****************************		Update		*****************************/		public function arrange($p:Paging):void {			if (scrollStyle.direction==ScrollStyle.HORIZONTAL){				for ( var i:* in thumbs ) {										var itemsWidth:Number = $p.itemsPerPage*(itemStyle.width+scrollStyle.padding)-scrollStyle.padding;					var offset:Number = Math.round( (scrollStyle.width-itemsWidth)/2);					thumbs[i].x = i*(scrollStyle.padding+itemStyle.width)+offset;										if (scrollStyle.align==ScrollStyle.TOP_LEFT) thumbs[i].y = 0;					else thumbs[i].y = scrollStyle.height - itemStyle.height;										if (i>$p.itemsPerPage-1) thumbs[i].visible = false;				} 			} else if (scrollStyle.direction==ScrollStyle.VERTICAL){				for ( i in thumbs ) {										var itemsHeight:Number = $p.itemsPerPage*(itemStyle.height+scrollStyle.padding)-scrollStyle.padding;					offset = Math.round( (scrollStyle.height-itemsHeight)/2);					thumbs[i].y = i*(scrollStyle.padding+itemStyle.height)+offset;										if (scrollStyle.align==ScrollStyle.TOP_LEFT) thumbs[i].x = 0;					else thumbs[i].x = scrollStyle.width - itemStyle.width;										if (i>$p.itemsPerPage-1) thumbs[i].visible = false;				} 			}		}						/*****************************		Scroller Style		*****************************/		public function get scrollStyle():ScrollStyle{			return _scrollStyle;		}				public function set scrollStyle($s:ScrollStyle):void{			_scrollStyle = $s;		}					}}