package com.eaglesandcobras.common.util.graphics {	import flash.geom.ColorTransform;		public class ColorScale {				public static function scale (startColor:uint, endColor:uint, num:uint):Array{			var colors:Array = new Array();						var s:ColorTransform = new ColorTransform();			s.color = startColor;						var e:ColorTransform = new ColorTransform();			e.color = endColor;						var steps:Object = new Object();			steps.red = (s.redOffset-e.redOffset)/(num-1);			steps.blue = (s.blueOffset-e.blueOffset)/(num-1);			steps.green = (s.greenOffset-e.greenOffset)/(num-1);						for (var i=1;i<num;i++) {				var myColor:ColorTransform = new ColorTransform();				myColor.redOffset = s.redOffset - (i*steps.red);				myColor.blueOffset = s.blueOffset - (i*steps.blue);				myColor.greenOffset = s.greenOffset - (i*steps.green);								colors.push (myColor.color);			}						return colors;		}				public static function multiscale (colors:Array, num:uint):Array {			var c:Array = new Array();			if (colors.length ==1) c[num] = colors[0];			else {				c.push (colors[0]);				var nums:Array = new Array();				for (var i=0;i<colors.length;i++) {					nums.push ( Math.floor( i*(num/(colors.length-1)) ) );				}				for (i=0;i<colors.length-1;i++) {					var cs:Array = scale (colors[i], colors[i+1], nums[i+1]-nums[i]+1) ;					c = c.concat(cs);				}			}			return c;		}	}	}